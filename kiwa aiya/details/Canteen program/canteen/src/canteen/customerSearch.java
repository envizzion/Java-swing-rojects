/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package canteen;
import java.awt.event.KeyEvent;
import java.sql.Connection;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;
import java.time.*;
import java.time.format.DateTimeFormatter;
import java.time.format.FormatStyle;
/**
 *
 * @author Acer
 */
public class customerSearch extends javax.swing.JFrame {
String currentOrderID;
    /**
     * Creates new form customerSearch
     */
    public customerSearch() {
        initComponents();
        fillFoodName();
        fillcusName();
        
       // searchDetails();
        
    }

    
    public void fillFoodName(){
         String foodname = " ";
        try {
            Connection c = new BSDB().con();
            Statement st = c.createStatement();
            String sql = "SELECT * FROM food_item";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                foodname = rs.getString("food_name");
                foodNames.addItem(foodname);
                
            } 
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }

    }

    public void fillcusName() {
        String supname = " ";
        try {
            Connection c = new BSDB().con();
            Statement st = c.createStatement();
            String sql = "SELECT * FROM customer";
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                supname = rs.getString("cus_name");
                jComboBox1.addItem(supname);
            }
        
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }

    }
   
    
    
   public void searchDetails() {

        try {
            Connection c = new BSDB().con();
            Statement st = c.createStatement();
             Statement st1=c.createStatement();
           // Date date = picker1.getDate();
           // Date date4 = date3.getDate();
            String datecompiler = date2.getDateTimePermissive().toString();//String.format("%1$tY-%1$tm-%1$td", date);
            String datecompiler1 = date3.getDateTimePermissive().toString();//String.format("%1$tY-%1$tm-%1$td", date4);
            String name=jComboBox1.getSelectedItem().toString();
             
            //getting sup_ID
            ResultSet rs2=st.executeQuery("select Cust_ID from customer where cus_name = '" +name+"'");
            String supID="";
             while(rs2.next()){supID=rs2.getString("Cust_ID");}
           // System.out.println(supID);
            
           
            //ResultSet rs1=st.executeQuery("select Order_ID from sup_orders where Sup_ID='"+supID+"'");
            //String orderID="";
            // while(rs1.next()){orderID=rs1.getString("Order_ID");}
            
            String tbl = "SELECT * FROM orders where Order_ID IN (select Order_ID from cust_orders where Cust_ID = '"+supID+"' and date >= '"+datecompiler+" ' and date <= '"+datecompiler1+"')";
            ResultSet rs = st1.executeQuery(tbl);
            cusOrders.setModel(DbUtils.resultSetToTableModel(rs));
            

        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jamount = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        updateButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        cusOrders = new javax.swing.JTable();
        junitPrice = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        foodNames = new javax.swing.JComboBox();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnsearch1 = new javax.swing.JButton();
        delete1 = new javax.swing.JButton();
        date2 = new com.github.lgooddatepicker.components.DateTimePicker();
        date3 = new com.github.lgooddatepicker.components.DateTimePicker();
        date1 = new com.github.lgooddatepicker.components.DateTimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jamount.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jamountCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jamountInputMethodTextChanged(evt);
            }
        });
        jamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jamountActionPerformed(evt);
            }
        });
        jamount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jamountKeyTyped(evt);
            }
        });
        getContentPane().add(jamount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 200, 140, -1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 390, -1, -1));

        updateButton.setText("update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 530, -1, -1));

        cusOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food Name", "Quantity", "Price", "Date"
            }
        ));
        cusOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(cusOrders);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 183, 460, 198));
        getContentPane().add(junitPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 260, 140, 38));

        jLabel8.setText("unit price");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 70, -1, 30));

        jLabel9.setText("total price");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 260, -1, -1));

        jLabel4.setText("quantity");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 190, 60, 26));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 60, 140, 35));

        jLabel5.setText("date");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 330, 60, -1));

        jLabel6.setText("descrition");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 420, 73, 40));

        foodNames.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        foodNames.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                foodNamesItemStateChanged(evt);
            }
        });
        foodNames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNamesActionPerformed(evt);
            }
        });
        getContentPane().add(foodNames, new org.netbeans.lib.awtextra.AbsoluteConstraints(1002, 16, 177, 35));

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 140, 20));

        jLabel1.setBackground(new java.awt.Color(102, 255, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("customer Name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 100, 20));

        jLabel2.setBackground(new java.awt.Color(102, 255, 153));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Date ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 20));

        btnsearch1.setText("Search");
        btnsearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearch1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnsearch1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 460, -1, -1));

        delete1.setText("Delete");
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });
        getContentPane().add(delete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, -1, -1));
        getContentPane().add(date2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, -1, -1));
        getContentPane().add(date3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 110, -1, -1));
        getContentPane().add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 330, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jamountCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jamountCaretPositionChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jamountCaretPositionChanged

    private void jamountInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jamountInputMethodTextChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_jamountInputMethodTextChanged

    private void jamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jamountActionPerformed

        int amount=Integer.parseInt(jamount.getText());
        int  unitprice=Integer.parseInt(junitPrice.getText());
        String total=String.valueOf(amount*unitprice);

        jLabel10.setText(total);

    }//GEN-LAST:event_jamountActionPerformed

    private void jamountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamountKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jamountKeyTyped

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        try{
            Connection c1;
            c1= new BSDB().con();
            Statement pst = c1.createStatement();

            String foodname= foodNames.getSelectedItem().toString();
            String v2= date1.getDateTimePermissive().toString();
            String v3="";
            //String v4= text4.getText();
            String quant= jamount.getText();
            String desc= jTextArea1.getText();
            String datecompiler =v2; //String.format("%1$tY-%1$tm-%1$td", v2);

            //getting supplier id
            //String supName="select Sup_ID from supplier where sup_name='"+v1+"'";
            //ResultSet rs=pst.executeQuery(supName);
            //(rs.next()){v1=rs.getString("Sup_ID");}

            //taking food_ID
            String foodName="select Food_ID from food_item where Food_name='"+foodname+"'";
            ResultSet rs=pst.executeQuery(foodName);
            while(rs.next()){v3=rs.getString("Food_ID");}

               //updatingStock
           StockUpdate su1=new StockUpdate();
           su1.cusStocksChange(stock,quant , v3);
            
            
            //updating order table
            String orderUpdate ="update orders set  date='"+datecompiler+"',amount='"+ quant+"',description='"+desc+"',Food_ID ='"+v3+"' where Order_ID='"+currentOrderID+"'";
            pst=c1.prepareStatement(orderUpdate);
            pst.executeUpdate(orderUpdate);

            // pst=c.prepareStatement(Sql);

            // pst.executeUpdate(Sql);
            
         
            
            
            JOptionPane.showMessageDialog(null, "updated");
            searchDetails();

        }
        catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_updateButtonActionPerformed
String stock,foodID;
    private void cusOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusOrdersMouseClicked
        try{
            Connection c1;
            c1= new BSDB().con();
            Statement st = c1.createStatement();
            // String sql = "SELECT * FROM supplier";
            // ResultSet rs = st.executeQuery(sql);

            int row=cusOrders.getSelectedRow();
            String Table_Click=(cusOrders.getModel().getValueAt(row,0).toString());
            String sql="Select * from orders where Order_ID='"+ Table_Click+"'";
            //getting food name

            // String supName="select Sup_name from supplier where Sup_ID=(select Sup_ID from sup_orders where Order_ID='"+Table_Click+"')";

            String foodName="select * from food_item where Food_ID=(select Food_ID from orders where Order_ID ='"+Table_Click+"')";
            // jComboBox2.setSelectedItem( jComboBox1.getSelectedItem());
            //st=c.prepareStatement(Sql);
            //pst2=c.prepareStatement(foodName);
            //jComboBox3.setSelected

            ResultSet rs1=st.executeQuery(sql);
            while(rs1.next()){
                // text4.setText(rs1.getString(0));
                //setting food name for selected row
                st=c1.prepareStatement(foodName);
                ResultSet rs2=st.executeQuery(foodName);
                if(rs2.next()){
                foodNames.setSelectedItem(rs2.getString("Food_name"));
                foodID=rs2.getString("Food_ID");
                }
              
                 //addint datetime to date1
                         try{
                               // Connection c3=new BSDB().con();
                               Statement ss=c1.createStatement();
                               ResultSet rs3=ss.executeQuery("select date_format(date,'%Y-%m-%d %h:%i' )from orders where Order_ID ='"+Table_Click+"'");
                               while(rs3.next()){
                               LocalDateTime t1=LocalDateTime.parse(rs3.getString(1),DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm"));
                               date1.setDateTimePermissive(t1);
                  }
                  
                           }catch(Exception e){System.out.println(e);} 
    

                 

                stock=rs1.getString("amount");
                jamount.setText(stock);

                //updating totalprice label
                int units,unitprice;
                String total;
                units=Integer.parseInt(stock);
                unitprice=Integer.parseInt(jamount.getText());
                total=String.valueOf(units*unitprice);
                jLabel10.setText(total);

                // String add5=rs1.getString("unit_price");
                //text5.setText(add5);
                //text4.setText("dvdfdg");
                String add6=rs1.getString("description");
                jTextArea1.setText(add6);
                currentOrderID=rs1.getString("Order_ID");
            }

        }
        catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_cusOrdersMouseClicked

    private void foodNamesItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foodNamesItemStateChanged
        String currentUnit= foodNames.getSelectedItem().toString();
        String sql="select unit_price from food_item where Food_name='"+currentUnit+"'";
        try{
            Connection c1;
            c1= new BSDB().con();
            Statement pst = c1.createStatement();
            ResultSet rs=pst.executeQuery(sql);
            while(rs.next()){junitPrice.setText(rs.getString("unit_price"));}

        }
        catch(Exception e){System.out.println(e);}
    }//GEN-LAST:event_foodNamesItemStateChanged

    private void foodNamesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNamesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodNamesActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnsearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearch1ActionPerformed
        // TODO add your handling code here:
        searchDetails();

    }//GEN-LAST:event_btnsearch1ActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed

        try{
            Connection c = new BSDB().con();
            Statement pst=c.createStatement();

            //adding stock_amount in food_item
            StockUpdate su1=new StockUpdate();
            su1.cusDeleteStock(stock, foodID);

            //deleting from supplier order table
            String cusOrder="delete from cust_orders where Order_ID='"+currentOrderID+"'";
            pst.executeUpdate(cusOrder);

            //deleting from orders
            String Sql="DELETE FROM orders WHERE Order_ID='"+currentOrderID+"'";
            pst.executeUpdate(Sql);
            JOptionPane.showMessageDialog(null, "deleted");
            searchDetails();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_delete1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(customerSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(customerSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(customerSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(customerSearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new customerSearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnsearch1;
    private javax.swing.JTable cusOrders;
    private com.github.lgooddatepicker.components.DateTimePicker date1;
    private com.github.lgooddatepicker.components.DateTimePicker date2;
    private com.github.lgooddatepicker.components.DateTimePicker date3;
    private javax.swing.JButton delete1;
    private javax.swing.JComboBox foodNames;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jamount;
    private javax.swing.JLabel junitPrice;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
