/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Classes.Helper;
import Classes.JDBC;
import Classes.Validation;
import GUI.EXceptionAndToast.Toast;
import java.sql.ResultSet;
import javax.swing.JFrame;
import javax.swing.JTextField;
import javax.swing.table.TableColumn;

/**
 *
 * @author Ice
 */
public class MenueType extends javax.swing.JFrame {

    /**
     * Creates new form MenueType
     */
    private Helper helper = new Helper();
    private JDBC db = new JDBC();
    private Validation v = new Validation();
    TableColumn myTableColumn0;
    TableColumn myTableColumn1;
    private JFrame parent;

    public MenueType() {
        initComponents();
    }

    public MenueType(JFrame parent) {
        initComponents();
        InitialDataLoader();
        myTableColumn0 = table.getColumnModel().getColumn(0);
        helper.hideColumn(table, myTableColumn0);

        idText.setVisible(false);
        this.parent = parent;
        this.parent.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton43 = new javax.swing.JButton();
        jScrollPane14 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        idText = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton42 = new javax.swing.JButton();
        jButton41 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel70 = new javax.swing.JLabel();
        typeName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton43.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButton43.setText("Back");
        jButton43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton43ActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Name"
            }
        ));
        jScrollPane14.setViewportView(table);

        idText.setText("jTextField1");

        jButton25.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jButton25.setText("Edit Selected");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton24.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jButton24.setText("Refresh");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jButton42.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButton42.setText("Save");
        jButton42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton42ActionPerformed(evt);
            }
        });

        jButton41.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jButton41.setText("Update");
        jButton41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton41ActionPerformed(evt);
            }
        });

        jLabel70.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel70.setText("Name :");

        typeName.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeName, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(46, 46, 46))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(typeName, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jButton43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton41, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(jButton42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton43, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane14, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton41, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton42)
                        .addGap(71, 71, 71))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton43ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton43ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        int[] Rows = table.getSelectedRows();

        if (Rows.length == 0) {
            Toast message = new Toast("No Any Row Selected For Edit and update", 1, this);
            message.setVisible(true);

        } else if (Rows.length > 1) {

            Toast message = new Toast("cant Ubpade Multiple Rows at Same Rime", 1, this);
            message.setVisible(true);

        } else {

            String id = table.getModel().getValueAt(Rows[0], 0).toString();

            String Query = "SELECT "
                    + "idMenueType,"
                    + "Name"
                    + " FROM "
                    + "menuetype WHERE  idMenueType ='" + id + "'";

            System.out.println(Query);
            ResultSet Rs = db.getData(Query);
            helper.spliitDataSet(Rs, 2, 0, 0, 0, 0);
            JDBC.TerminateConnection();

            JTextField[] fields = {
                idText,
                typeName

            };

            helper.tofields(fields, 2);

        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int[] Rows = table.getSelectedRows();

        if (Rows.length == 0) {
            Toast message = new Toast("No Any Row Selected For Edit and update", 1, this);
            message.setVisible(true);

        } else {

            String Q1 = "status= '" + "Inactive" + "'";
            String Q2 = "idMenueType =";

            for (int Row : Rows) {

                String idSet = table.getModel().getValueAt(Row, 0).toString();
                Q2 += "'" + idSet + "'";
                db.UpdateDataBaseTable("menuetype", Q1, Q2);
                Q2 = "menuetype =";

            }

            helper.clearTable(table);
            helper.showColumn(table, myTableColumn0);
            ResultSet Rs = db.getData("SELECT idMenueType,Name FROM menuetype WHERE status='Active';");

            db.addToTable(table, Rs);
            helper.hideColumn(table, myTableColumn0);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        helper.clearTable(table);
        helper.showColumn(table, myTableColumn0);
        ResultSet Rs = db.getData("SELECT idMenueType,Name FROM menuetype WHERE status='Active';");

        db.addToTable(table, Rs);
        helper.hideColumn(table, myTableColumn0);
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton42ActionPerformed

        JTextField[] FieldSet = {
            typeName,};

        v.emptyTextfield(FieldSet);

        boolean isValidated = v.validateForm(this);

        if (isValidated) {

            try {

                String[] FieldSet1 = {
                    typeName.getText(),
                    "Active"
                };

                String query3 = helper.querySetter1(FieldSet1);
                db.InsertDataToDB("Name,status", query3, "menuetype");

            } catch (Exception e) {

                //                System.out.println("Execption" + e);
                e.printStackTrace();
            }

            Toast succesfulMessage = new Toast("You have Succsessfull addesd new catagory to the System.", 1, this);
            succesfulMessage.setVisible(true);

            helper.clearTextFields(jPanel1);

            helper.clearTable(table);
            helper.showColumn(table, myTableColumn0);
            ResultSet Rs = db.getData("SELECT idMenueType,Name FROM menuetype WHERE status='Active';");
            // helper.addToTable(jTable2, Rs);
            db.addToTable(table, Rs);
            helper.hideColumn(table, myTableColumn0);

            int index = table.getRowCount() - 1;

            helper.selectlastAddedUpdatedRecord(table, index);

        }

    }//GEN-LAST:event_jButton42ActionPerformed

    private void jButton41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton41ActionPerformed

        int[] Rows = table.getSelectedRows();

        if (Rows.length == 0) {
            Toast message = new Toast("No Any Row Selected For Edit and update", 1, this);
            message.setVisible(true);

        } else if (Rows.length > 1) {

            Toast message = new Toast("cant Ubpade Multiple Rows at Same Rime", 1, this);
            message.setVisible(true);

        } else {

            JTextField[] FieldSet = {
                typeName

            };

            v.emptyTextfield(FieldSet);

            boolean isValidated = v.validateForm(this);

            if (isValidated) {

                //,,,,,,,,,,,login_idlogin
                String Q1 = "Name = '" + typeName.getText() + "' ";

                String Q2 = "idMenueType ='" + idText.getText() + "'";

                db.UpdateDataBaseTable("menuetype", Q1, Q2);

                Toast succesfulMessage = new Toast("You have Succsessfull Updated User to the System.", 1, this);
                succesfulMessage.setVisible(true);

                helper.clearTextFields(jPanel1);

                helper.clearTable(table);
                helper.showColumn(table, myTableColumn0);
                ResultSet Rs = db.getData("SELECT idcat_level_two,category_two_name,price FROM hotelres.cat_level_two WHERE status='Active';");

                db.addToTable(table, Rs);
                helper.hideColumn(table, myTableColumn0);

                int index = Rows[0];
                helper.selectlastAddedUpdatedRecord(table, index);

            }

        }

    }//GEN-LAST:event_jButton41ActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        HomeWindow form = (HomeWindow) parent;
        form.loadComboMenueTypes();
        
        this.parent.setEnabled(true);
        


    }//GEN-LAST:event_formWindowClosing

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            
        HomeWindow form = (HomeWindow) parent;
        
        form.checkForGenerate=false;   
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenueType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenueType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenueType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenueType.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenueType().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton41;
    private javax.swing.JButton jButton42;
    private javax.swing.JButton jButton43;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane14;
    private javax.swing.JTable table;
    private javax.swing.JTextField typeName;
    // End of variables declaration//GEN-END:variables

    private void InitialDataLoader() {

        ResultSet Rs = db.getData("SELECT idMenueType,Name FROM menuetype WHERE status='Active';");
        // helper.addToTable(jTable2, Rs);
        db.addToTable(table, Rs);

    }
}
